# Generated by Django 5.2.5 on 2025-08-15 20:55

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('points_required', models.IntegerField(blank=True, null=True)),
                ('games_required', models.IntegerField(blank=True, null=True)),
                ('icon', models.CharField(default='üèÜ', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='GameSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100, unique=True)),
                ('points_earned', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('fruits_collected', models.IntegerField(default=0)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Session de Jeu',
                'verbose_name_plural': 'Sessions de Jeu',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PlayerScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, help_text='Score total du joueur', validators=[django.core.validators.MinValueValidator(0)])),
                ('games_played', models.IntegerField(default=0, help_text='Nombre total de parties jou√©es', validators=[django.core.validators.MinValueValidator(0)])),
                ('best_score', models.IntegerField(default=0, help_text='Meilleur score en une partie', validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_played', models.DateTimeField(blank=True, null=True)),
                ('player', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='game_score', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Score du Joueur',
                'verbose_name_plural': 'Scores des Joueurs',
                'ordering': ['-score'],
            },
        ),
        migrations.CreateModel(
            name='PlayerAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='snakegame.achievement')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Succ√®s du Joueur',
                'verbose_name_plural': 'Succ√®s des Joueurs',
                'unique_together': {('player', 'achievement')},
            },
        ),
    ]
